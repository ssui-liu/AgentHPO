from langchain.agents import ZeroShotAgent, Tool, AgentExecutor
from langchain.chat_models import ChatOpenAI
from langchain.tools import StructuredTool
from langchain.agents import initialize_agent, AgentType
import os
from agents.tools import FileTool, PythonFileExecutorTool
from agents.prompts.task_executor_prompt import PREFIX, FORMAT_INSTRUCTIONS, SUFFIX


def init_executor(model,
                  load_config_path,
                  write_config_path,
                  log_path,
                  main_file_path
                  ):
    file_tools = FileTool(load_config_path=load_config_path,
                          write_config_path=write_config_path,
                          log_path=log_path)
    executor_tools = PythonFileExecutorTool(
        file_path=main_file_path)

    tools = [
        Tool(
            name="LoadConfigs",
            func=file_tools.load_config,
            description="useful for when you need to loading the model training configs and read the content. The "
                        "file contains the hyper-parameters that used to define the training details of the model. "
                        "The path is already set so you don't need to provide it.",
        ),
        # write_tool
        Tool(
            name="WriteConfigs",
            func=file_tools.write_config,
            description="useful for when you need to writing the changed configs into file. Input should be the "
                        "changed hyper-parameter that you want to write into the file in JSON FORMAT. The path is "
                        "already set so you don't need to provide it.",
        ),
        Tool(
            name="ExecutePythonFile",
            func=executor_tools.execute,
            description="useful for when you need to execute the python file to training the model. The path is "
                        "already set so you don't need to provide it.",
        ),
        Tool(
            name="LoadTrainingLogs",
            func=file_tools.load_log,
            description="useful for when you need to loading the model training logs and read the content. The file "
                        "contains the training logs (loss, accuracy) generated by training. The path is already set "
                        "so you don't need to provide it.",
        ),
    ]

    llm = ChatOpenAI(temperature=0.7, model=model)

    agent_executor = initialize_agent(
        tools=tools,
        llm=llm,
        agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,  # .STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,
        verbose=True,
        handle_parsing_errors=True,
        # return_intermediate_steps=True,
        agent_kwargs={
            "prefix": PREFIX,
            "suffix": SUFFIX,
            "format_instructions": FORMAT_INSTRUCTIONS,
        }
    )
    return agent_executor

